<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/css/bootstrap.min.css" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap">

@using BlogWebApp.ViewModels
@using BlogWebApp.Data
﻿@using Microsoft.AspNetCore.Identity
@model IndexPostViewModel

@{
    bool isAuthenticated = User.Identity?.IsAuthenticated == true;

    int resultStart = ((Model.Page - 1) * Model.PageSize) + 1;
    int resultEnd = Math.Min(resultStart + Model.PageSize - 1, Model.TotalPosts);

    bool isValidPage = resultStart <= Model.TotalPosts;

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="main-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col text-center">
                <h1>Explore our awesome content!</h1>
            </div>
        </div>
        <div class="row justify-content-center">
                <div class="col text-center">
                    <h3>Post Categories</h3>
                    <div class="mb-3">
                        <a type="button" class="btn btn-secondary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="-1">All</a>
                        @foreach (var category in Html.GetEnumSelectList<Category>())
                        {
                            <a type="button" class="btn btn-secondary mb-1" asp-action="Index" asp-route-page="1" asp-route-category="@category.Value">@category.Text</a>
                        }
                    </div>
                </div>
            </div>
        <div class="container mb-4">
            <form method="get" asp-action="Index" class="text-center">
                <div class="row justify-content-center align-items-center">
                    <div class="col-md-6">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search by keyword" name="keyword" value="@Model.Keyword" style="height: 38px;" />
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="submit" style="height: 38px;">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row justify-content-center mt-3">
                    <div class="col-md-6">
                        <span>
                            <a asp-controller="Post" asp-action="DownloadExcel" class="btn btn-primary">Download Excel</a>
                        </span>
                    </div>
                </div>
            </form>
        </div>

        <div class="container">
            <div class="d-flex text-center justify-content-between align-items-center mb-4">
                <div class="col">
                    @if (isValidPage)
                    {
                        <a type="button" class="btn btn-sm btn-outline-primary @prevDisabled"
                           asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">
                            Prev
                        </a>
                        <a type="button" class="btn btn-sm btn-outline-primary @nextDisabled"
                           asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">
                            Next
                        </a>
                        <span class="text-muted text-small">Results @resultStart - @resultEnd of @Model.TotalPosts</span>
                    }
                </div>
            </div>

            @foreach (var item in Model.Posts)
            {
                <div class="col-md-6 mx-auto">
                    <div class="post-container d-flex flex-column align-items-center">
                        <h4 class="mt-3"><strong><a asp-controller="Post" asp-action="Detail" asp-route-id="@item.Id">@item.Title</a></strong></h4>
                        <a asp-controller="Post" asp-action="Detail" asp-route-id="@item.Id" class="thumbnail">
                            <img src="@item.ImageUrl" alt="Image" class="img-fluid">
                        </a>
                        <p class="description-text mt-3" data-fulltext="@item.Description">
                            @if (item.Description.Length > 72)
                            {
                                <span class="truncated-text">@item.Description.Substring(0, 72)</span>
                                <span class="full-text" style="display: none;">@item.Description</span>
                                <a href="#" class="read-more-btn">Read more</a>
                            }
                            else
                            {
                                @item.Description
                            }
                        </p>
                        <p>
                            <i class="fas fa-user"></i> @(item.AppUser != null ? item.AppUser.UserName : "Anonymous")
                            | <i class="far fa-calendar"></i> @item.CreatedDate.ToString("MMM dd, yyyy")
                            | <i class="fas fa-tags"></i> Category:
                            <i><span class="label label-info">@item.Category.ToString()</span> </i>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("editor"))
                            {
                                <span>|</span>
                                <i class="fas fa-edit"></i>
                                <a asp-controller="Post" asp-action="Edit" asp-route-id="@item.Id" class="edit-link">Edit Post</a>
                            }
                            | <i class="far fa-comment"></i>
                            <a href="#" class="comment-link" data-post-id="@item.Id">@item.Comments.Count() Comments</a>
                        </p>
                        <div class="comments-container" style="display: none;">
                            @foreach (var comment in item.Comments)
                            {
                                <div class="comment" id="comment-@comment.Id" style="position: relative;">
                                    <p>
                                        <a>
                                            @(comment.AppUser != null ? comment.AppUser.UserName : "Anonymous")
                                        </a> wrote:
                                    </p>
                                    <div class="comment-content" id="comment-content-@comment.Id">
                                        @comment.Text
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="comment-box">
                            <textarea id="comment-text-@item.Id" rows="2" class="form-control" placeholder="Write your comment..."></textarea>
                            <button class="btn btn-primary post-comment" data-post-id="@item.Id">Post the Comment</button>
                        </div>
                    </div>
                    <hr />
                </div>
            }

            <div class="col text-center mb-4">
                <div>
                    @if (isValidPage)
                    {
                        <a type="button" class="btn btn-sm btn-outline-primary @prevDisabled"
                           asp-action="Index" asp-route-page="@(Model.Page - 1)" asp-route-category="@Model.Category">
                            Prev
                        </a>
                        <a type="button" class="btn btn-sm btn-outline-primary @nextDisabled"
                           asp-action="Index" asp-route-page="@(Model.Page + 1)" asp-route-category="@Model.Category">
                            Next
                        </a>
                        <span class="text-muted text-small">Results @resultStart - @resultEnd of @Model.TotalPosts</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var originalHtml = $('.row').html();
        var backButtonAdded = false;

        $('.read-more-btn').click(function (e) {
            e.preventDefault();
            var descriptionText = $(this).closest('.col-md-6').find('.description-text');
            descriptionText.find('.truncated-text').toggle();
            descriptionText.find('.full-text').toggle();
        });

        $('.comment-link').click(function (event) {
            event.preventDefault();

            var postContainer = $(this).closest('.col-md-6');
            var commentsContainer = $(this).closest('.col-md-6').find('.comments-container');
            var commentBox = $(this).closest('.col-md-6').find('.comment-box');

            commentsContainer.toggle();
            commentBox.toggle();
        });

        $('.post-comment').click(function () {
            var postContainer = $(this).closest('.col-md-6');
            var postId = $(this).data('post-id');
            var commentText = $('#comment-text-' + postId).val();
            var userId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';

            $.ajax({
                url: '/Post/AddComment',
                type: 'POST',
                data: {
                    postId: postId,
                    text: commentText,
                    userId: userId
                },
                success: function (data) {
                    console.log('Comment added successfully:', data);

                    var newCommentHtml = '<div class="comment" id="comment-' + data.id + '" style="position: relative;">' +
                        '<p>' +
                        '<a>' + (data.appUser != null ? data.appUser.userName : "Anonymous") + '</a> wrote:' +
                        '</p>' +
                        '<div class="comment-content" id="comment-content-' + data.id + '">' +
                        data.text +
                        '</div>' +
                        '</div>';

                    postContainer.find('.comments-container').append(newCommentHtml);

                    $('#comment-text-' + postId).val('');
                },
                error: function (xhr, status, error) {
                    console.error('Error adding comment:', error);
                    alert('Comment cannot be posted if it is empty!');
                }
            });
        });
    });
</script>

<style>
    .post-container {
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        padding-bottom: 15px;
        margin-bottom: 20px;
        margin: auto;
    }


    .comment-box {
        display: none;
        padding: 10px;
        border: 1px solid #ddd;
        margin-top: 10px;
        width: 100%; 
    }

    .comments-container {
        border: 1px solid #ddd; /* Border for each comment */
        background-color: #f9f9f9; /* Background color */
        padding: 10px; /* Padding inside each comment */
        margin-bottom: 10px; /* Spacing between comments */
        width: 100%; /* Set the width to 100% */
    }

    .description-text {
        font-family: 'Dancing Script', cursive;
    }
</style>